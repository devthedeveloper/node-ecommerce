'use strict';

 /**
 * car controller file * autogenerated by mongoose-scaffold-crud **/

var cars = require('express').Router(),
    Model = require('../models/model-cars.js');

cars.get('/', function(req, res) {
    Model.find(function(err, cars){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error getting cars.'
                });
            }
            return res.json(cars);
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
        return res.render('cars/index', {cars: cars});
        }
    });
});

cars.post('/', function(req, res) {
    var car = new Model({
        'color': req.body['color'],
        'model': req.body['model']
    });
    car.save(function(err, car){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error saving item.',
                    error: err
                });
            }
            return res.json({
                message: 'saved',
                _id: car._id
            });
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            return res.render('cars/edit', {car: car});
        }
    });
});

cars.get('/:id', function(req, res) {
    var id = req.params.id;
    Model.findOne({_id: id}, function(err, car){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error getting car.'
                });
            }
            if(!car) {
                return res.json(404, {
                    message: 'No such car.'
                });
            }
            return res.json(car);
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            if(!car) {
                return res.end('No such car');
            }
            return res.render('cars/edit', {car: car, flash: 'Created.'});
        }
    });
});

cars.put('/:id', function(req, res) {
    var id = req.params.id;
    Model.findOne({_id: id}, function(err, car){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error saving car',
                    error: err
                });
            }
            if(!car) {
                return res.json(404, {
                    message: 'No such car'
                });
            }
            car['color'] = req.body['color'] ? req.body['color'] : car['color'];
            car['model'] = req.body['model'] ? req.body['model'] : car['model'];
            car.save(function(err, car){
                if(err) {
                    return res.json(500, {
                        message: 'Error getting car.'
                    });
                }
                if(!car) {
                    return res.json(404, {
                        message: 'No such car'
                    });
                }
                return res.json(car);
            });
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            if(!car) {
                return res.end('No such car');
            }
            car['color'] = req.body['color'] ? req.body['color'] : car['color'];
            car['model'] = req.body['model'] ? req.body['model'] : car['model'];
            car.save(function(err, car){
                if(err) {
                    return res.send('500: Internal Server Error', 500);
                }
                if(!car) {
                    return res.end('No such car');
                }
                return res.render('cars/edit', {car: car, flash: 'Saved.'});
            });
        }
    });
});

cars.delete('/:id', function(req, res) {
    var id = req.params.id;
    Model.findOne({_id: id}, function(err, car){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error getting car.'
                });
            }
            if(!car) {
                return res.json(404, {
                    message: 'No such car'
                });
            }
            return res.json(car);
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            if(!car) {
                return res.end('No such car');
            }
            return res.render('index', {flash: 'Item deleted.'});
        }
    });
});

module.exports.cars = cars;